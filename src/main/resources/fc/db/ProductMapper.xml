<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org/DTD Mapper3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="fc.db.ProductMapper">

	<select id="pro" resultType="pDTO" parameterType="pDTO">
		SELECT * FROM product
		<where>
			 <trim suffix=" " suffixOverrides = " and | or">
	            
                <if test="sch!=null and sch!='' and sch!=('all')">
                   proKind = #{sch} and 
                </if>
	            
	            
	         	<if test="start !='' and start!=null">
	               <if test="end !='' and end!=null">
	                  reg_date BETWEEN #{start} AND #{end} and
	               </if>
	            </if>
	         	
	         	<if test="startPrice !='' and startPrice != null">
                <if test="endPrice !='' and endPrice!=null">
	                  sellPrice BETWEEN #{startPrice} AND #{endPrice}
	               </if>
	            </if>
	            
	         </trim>
		</where>
	</select>
	
	
	
	<select id="propagelist" resultType="pDTO" parameterType="pDTO">
		SELECT * FROM product
		<where>
		    <if test="pDTO.sch != null and pDTO.sch != ''">
			 <trim suffix=" " suffixOverrides = " and | or">
		      
		        <if test="pDTO.sch!=null and pDTO.sch!='' and pDTO.sch!=('all')">
                   proKind = #{pDTO.sch} and 
                </if>
		        
		        <if test="pDTO.start !='' and pDTO.start!=null">
	               <if test="pDTO.end !='' and pDTO.end!=null">
	                  reg_date BETWEEN #{pDTO.start} AND #{pDTO.end} and
	               </if>
	            </if>
	            
	            <if test="pDTO.startPrice !='' and pDTO.startPrice != null">
                <if test="pDTO.endPrice !='' and pDTO.endPrice!=null">
	                  sellPrice BETWEEN #{pDTO.startPrice} AND #{pDTO.endPrice}
	               </if>
	            </if>
		      </trim>
		    </if>
		  </where>
  
		    ORDER BY reg_date desc
		    <if test="pd.start != null and pd.limit != null">
		      LIMIT #{pd.start}, #{pd.limit}
		    </if>
		  
	</select>
	
	
	
	<select id="pro_select" resultType="pDTO" parameterType="pDTO">
		SELECT * FROM product
		<where>
			proKind = #{proKind}     
			AND kind = '진열함'
			
		</where>
	</select>
	
	
	<select id="pro_detail" resultType="pDTO" parameterType="pDTO">
		SELECT * FROM product
		<where>
			proName = #{proName}
		</where>
	</select>
	
	
	<insert id="insert" parameterType="pDTO" >
		<selectKey keyProperty="num" resultType="Integer" order="BEFORE">
			select max(num)+1 from product
		</selectKey>
		insert into product (num,kind,proKind,proName,proDetail,pf1,pf2,pf3,proSize,color,colorName,sel,memPoint,supplyPrice,sellPrice,proCnt,reg_date)
		values
		(#{num}, #{kind}, #{proKind}, #{proName}, #{proDetail},#{pf1},#{pf2},#{pf3},#{proSize},#{color},#{colorName},#{sel},#{memPoint},#{supplyPrice},#{sellPrice},#{proCnt},sysdate())
	</insert>

<select id="detail" parameterType="pDTO" resultType="pDTO">
		select * from product where proName = #{proName}
	</select>
	
	<update id="modify" parameterType="pDTO">
        update product set kind = #{kind} , proKind = #{proKind} , proName = #{proName} , 
        proDetail = #{proDetail} , proSize = #{proSize} , pf1 = #{pf1} , pf2 = #{pf2} , pf3 = #{pf3} ,
        color = #{color} ,colorName = #{colorName}, sel = #{sel} , memPoint = #{memPoint} , supplyPrice = #{supplyPrice}, 
        sellPrice = #{sellPrice}
        where proName = #{proName}
    </update>
    
    <delete id="prdDelete"  parameterType="pDTO">
		delete from product where proName = #{proName}
	</delete>
    
    <select id="protalcount" resultType="int">
        SELECT COUNT(*) FROM product
        <where>
            <if test="sch != null">
                id LIKE CONCAT('%', #{sch}, '%') OR title LIKE CONCAT('%', #{sch}, '%')
            </if>
        </where>
    </select>
    
</mapper>